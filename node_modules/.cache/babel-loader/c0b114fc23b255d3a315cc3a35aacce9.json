{"ast":null,"code":"var _jsxFileName = \"C:\\\\git Repos\\\\stuHelp-UI\\\\src\\\\Components\\\\ModalCalender.js\";\n//Problem \n// --> Showing the available Dates for the Professor \n// --> Getting the Dates from the Database showcasing the available dates on the Calender\n// --> Showing the available Timelines for the Available Dates\n// --> Managing the One - One Counselling and the Group Counselling\n// --> Updating the Availability of the Professor according to the Booking Done on the Website \n// --> One-One --> Time slot will be Completely Booked\n// --> Group --> Time Slot will be shown until member limit becomes full\nimport { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalCalender extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = e => {\n      this.setState({\n        selectedDate: e.target.value\n      });\n    };\n\n    this.state = {\n      show: props.show,\n      selectedDate: ''\n    };\n  }\n\n  render() {\n    var today = new Date();\n    var maxDate = new Date();\n    var dd = today.getDate();\n    var maxdd = today.getDate() + 5;\n    var mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\n\n    var yyyy = today.getFullYear();\n    var timeLines = this.props.availability;\n    const dates = timeLines.map(item => item);\n    console.log(\"Dates=\", dates);\n    dates.sort((a, b) => new Date(a) - new Date(b));\n    console.log(\"Dates=\", dates);\n    const {\n      selectedDate\n    } = this.state;\n    const selectedAvailability = timeLines.find(item => item.date === selectedDate);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        value: selectedDate,\n        onChange: this.handleDateChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), dates.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.date,\n          children: item.date\n        }, item.date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), selectedAvailability && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Available Timings for \", selectedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedAvailability.timeSlot.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: time\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ModalCalender;","map":{"version":3,"sources":["C:/git Repos/stuHelp-UI/src/Components/ModalCalender.js"],"names":["Component","Form","ModalCalender","constructor","props","handleDateChange","e","setState","selectedDate","target","value","state","show","render","today","Date","maxDate","dd","getDate","maxdd","mm","getMonth","yyyy","getFullYear","timeLines","availability","dates","map","item","console","log","sort","a","b","selectedAvailability","find","date","timeSlot","time","index"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,gBARmB,GAQCC,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAzB,OAAd;AACD,KAVkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAER,KAAK,CAACQ,IADD;AAEXJ,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAMDK,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,OAAO,GAAG,IAAID,IAAJ,EAAd;AACA,QAAIE,EAAE,GAAGH,KAAK,CAACI,OAAN,EAAT;AACA,QAAIC,KAAK,GAAGL,KAAK,CAACI,OAAN,KAAkB,CAA9B;AACA,QAAIE,EAAE,GAAGN,KAAK,CAACO,QAAN,KAAmB,CAA5B,CALO,CAKwB;;AAC/B,QAAIC,IAAI,GAAGR,KAAK,CAACS,WAAN,EAAX;AACA,QAAIC,SAAS,GAAG,KAAKpB,KAAL,CAAWqB,YAA3B;AACA,UAAMC,KAAK,GAAGF,SAAS,CAACG,GAAV,CAAeC,IAAD,IAAUA,IAAxB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,KAAtB;AACAA,IAAAA,KAAK,CAACK,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIlB,IAAJ,CAASiB,CAAT,IAAc,IAAIjB,IAAJ,CAASkB,CAAT,CAAnC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,KAAtB;AAEA,UAAM;AAAElB,MAAAA;AAAF,QAAmB,KAAKG,KAA9B;AACA,UAAMuB,oBAAoB,GAAGV,SAAS,CAACW,IAAV,CAAgBP,IAAD,IAAUA,IAAI,CAACQ,IAAL,KAAc5B,YAAvC,CAA7B;AAEA,wBACE;AAAA,8BACE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAEA,YAAjC;AAA+C,QAAA,QAAQ,EAAE,KAAKH,gBAA9D;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGqB,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT;AAAwB,UAAA,KAAK,EAAEA,IAAI,CAACQ,IAApC;AAAA,oBACGR,IAAI,CAACQ;AADR,WAAaR,IAAI,CAACQ,IAAlB;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUGF,oBAAoB,iBACnB;AAAA,gCACE;AAAA,+CAA2B1B,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBACG0B,oBAAoB,CAACG,QAArB,CAA8BV,GAA9B,CAAkC,CAACW,IAAD,EAAOC,KAAP,kBACjC;AAAA,sBAAiBD;AAAjB,aAASC,KAAT;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AApDmC;;AAuDtC,eAAerC,aAAf","sourcesContent":["//Problem \r\n// --> Showing the available Dates for the Professor \r\n// --> Getting the Dates from the Database showcasing the available dates on the Calender\r\n// --> Showing the available Timelines for the Available Dates\r\n// --> Managing the One - One Counselling and the Group Counselling\r\n// --> Updating the Availability of the Professor according to the Booking Done on the Website \r\n// --> One-One --> Time slot will be Completely Booked\r\n// --> Group --> Time Slot will be shown until member limit becomes full\r\n\r\nimport { Component } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass ModalCalender extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: props.show,\r\n      selectedDate: ''\r\n    };\r\n  }\r\n\r\n  handleDateChange = (e) => {\r\n    this.setState({ selectedDate: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    var today = new Date();\r\n    var maxDate = new Date();\r\n    var dd = today.getDate();\r\n    var maxdd = today.getDate() + 5;\r\n    var mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\r\n    var yyyy = today.getFullYear();\r\n    var timeLines = this.props.availability;\r\n    const dates = timeLines.map((item) => item);\r\n    console.log(\"Dates=\", dates);\r\n    dates.sort((a, b) => new Date(a) - new Date(b));\r\n    console.log(\"Dates=\", dates);\r\n\r\n    const { selectedDate } = this.state;\r\n    const selectedAvailability = timeLines.find((item) => item.date === selectedDate);\r\n\r\n    return (\r\n      <div>\r\n        <Form.Control as=\"select\" value={selectedDate} onChange={this.handleDateChange}>\r\n          <option value=\"\">Select a date</option>\r\n          {dates.map((item) => (\r\n            <option key={item.date} value={item.date}>\r\n              {item.date}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n\r\n        {selectedAvailability && (\r\n          <div>\r\n            <h4>Available Timings for {selectedDate}</h4>\r\n            <ul>\r\n              {selectedAvailability.timeSlot.map((time, index) => (\r\n                <li key={index}>{time}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalCalender;\r\n"]},"metadata":{},"sourceType":"module"}